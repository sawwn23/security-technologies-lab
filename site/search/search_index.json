{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Security Techonologies Lab This guide contains lab references for the security tehchnologies module How to use gnu privacy guard Creating our own PKI with cfssl toolkit Install and configure Suricata NIDS Install and configure WAZUH HIDS","title":"Welcome to Security Techonologies Lab"},{"location":"#welcome-to-security-techonologies-lab","text":"This guide contains lab references for the security tehchnologies module How to use gnu privacy guard Creating our own PKI with cfssl toolkit Install and configure Suricata NIDS Install and configure WAZUH HIDS","title":"Welcome to Security Techonologies Lab"},{"location":"cryptography-lab/01-using_gnu_pg/","text":"Gnu Privacy Assistant Gnu Privacy Assistant (GPA) is a graphical program that interfaces with the GnuPG software. It should be noted that I have had several versions of GPA occasionally crash in Windows. Step 0 - Prerequisites Install Gpg4Win from http://gpg4win.org. You want the full version. You also need your recipient's public key either saved in a file or able to be copied to the clipboard. Step 1 - Generate your own keypair Open GPA. To create a new keypair click Keys --> New Key. Choose a name for the key. Click Forward. Enter an email address. The address doesn't have to be valid. To skip the email address, enter some text in the box and delete it. The Forward button will still be clickable. Click Forward. Feel free to select create a backup copy. [It's not necessary, but it's a good idea if the key is important] Click Forward. GPA will ask your for a passphrase for this key. Choose one that you've never used before and WRITE IT DOWN. After verifying the passphrase, GPA will generate the key and it will show up in the main window (Key Manager) of GPA. Step 2 - Import your recipient's public key. To encrypt a message, you need your recipient's public key. Find it and save the whole thing to a file. Make sure to select and save the whole key, including the -----BEGIN PGP PUBLIC KEY BLOCK----- and -----END PGP PUBLIC KEY BLOCK-----. All of it is necessary. Once saved, import the key to GPA. (Keys --> Import Keys) GPA should tell you that one public key was imported. Step 3 - Compose your message Open up a text editor. (Notepad is fine) Type your message. This is what your recipient will see. Save the message to a file. Step 4 - Encrypt your message GPA can work with files or text as inputs. You can use a text editor to write your message, save it as a file and GPA can work with the file. To work with a file, click Window --> File Manager in GPA. You could also work with text directly. To work with text in GPA, click Window --> Clipboard. The encryption procedure is the same for both. Add a file to the File Manager by clicking File --> Open and selecting your file. To add text to the Clipboard, simply type your message or use another text editor and copy/paste your message into the Clipboard. Once you have your message in GPA, click File --> Encrypt (In the File Manager or Clipboard window) to begin the encryption process. In the window that opens, select your recipient's key. You can select multiple recipients by holding down CTRL and selecting multiple keys. You can also select yourself so that you can decrypt the message. After your select your recipients, make sure you select the Armor checkbox. This formats the encrypted message as random letters and numbers. Click OK and GPA will encrypt your message. If your message was a file, then the encrypted file will be in the same location as the original file and will have the same filename but it will have a .asc file extension. That file contains your encrypted message. Open it with a text editor to view it. If you used the Clipboard, your original message will turn into the encrypted message. It will start with -----BEGIN PGP MESSAGE----- and the rest will be gibberish. Step 5 - Send your encrypted message to your recipient Your encrypted message looks like gibberish. And it IS gibberish to everyone except the people you added as recipients. The recipients can decrypt the message back into text. Nobody else can. You can send the encrypted message in an email or post it anywhere. The contents of your message are safe. If you want your recipient to be able to send encrypted messages that you can read, make sure to include your own public key. To do this, select your own key in GPA and click Keys --> Export Keys. (You can also right click the key and select Export Keys) Save the file under any name. Send the file to your recipient or copy the text inside the file and send that. Your public key can also be freely given out. Step 6 - Receive an encrypted response and decrypt it Your recipient will receive your encrypted message and your public key. He or she will decrypt the message and then use your public key to create an encrypted message to you. (The same process that you just completed) Once you receive an encrypted message from your recipient you will need to decrypt it so you can read it. Save the encrypted message as a file or copy it. (Ctrl + C) Similar to before, if your encrypted message from your recipient is a file, click Window --> File Manager and then File --> Open to select the encrypted file. If your encrypted message from your recipient is in an email or webpage, select it and copy/paste it into GPA's Clipboard (Window --> Clipboard). To decrypt the message, Click File --> Decrypt. GPA will then ask you for your password to your key. Since you WROTE IT DOWN just type the password and click OK. GPA's File Manager will save the plaintext file in the same place as the encrypted file. GPA's Clipboard will convert the encrypted text to plaintext right in the Clipboard window.","title":"Gnu Privacy Assistant"},{"location":"cryptography-lab/01-using_gnu_pg/#gnu-privacy-assistant","text":"Gnu Privacy Assistant (GPA) is a graphical program that interfaces with the GnuPG software. It should be noted that I have had several versions of GPA occasionally crash in Windows. Step 0 - Prerequisites Install Gpg4Win from http://gpg4win.org. You want the full version. You also need your recipient's public key either saved in a file or able to be copied to the clipboard. Step 1 - Generate your own keypair Open GPA. To create a new keypair click Keys --> New Key. Choose a name for the key. Click Forward. Enter an email address. The address doesn't have to be valid. To skip the email address, enter some text in the box and delete it. The Forward button will still be clickable. Click Forward. Feel free to select create a backup copy. [It's not necessary, but it's a good idea if the key is important] Click Forward. GPA will ask your for a passphrase for this key. Choose one that you've never used before and WRITE IT DOWN. After verifying the passphrase, GPA will generate the key and it will show up in the main window (Key Manager) of GPA. Step 2 - Import your recipient's public key. To encrypt a message, you need your recipient's public key. Find it and save the whole thing to a file. Make sure to select and save the whole key, including the -----BEGIN PGP PUBLIC KEY BLOCK----- and -----END PGP PUBLIC KEY BLOCK-----. All of it is necessary. Once saved, import the key to GPA. (Keys --> Import Keys) GPA should tell you that one public key was imported. Step 3 - Compose your message Open up a text editor. (Notepad is fine) Type your message. This is what your recipient will see. Save the message to a file. Step 4 - Encrypt your message GPA can work with files or text as inputs. You can use a text editor to write your message, save it as a file and GPA can work with the file. To work with a file, click Window --> File Manager in GPA. You could also work with text directly. To work with text in GPA, click Window --> Clipboard. The encryption procedure is the same for both. Add a file to the File Manager by clicking File --> Open and selecting your file. To add text to the Clipboard, simply type your message or use another text editor and copy/paste your message into the Clipboard. Once you have your message in GPA, click File --> Encrypt (In the File Manager or Clipboard window) to begin the encryption process. In the window that opens, select your recipient's key. You can select multiple recipients by holding down CTRL and selecting multiple keys. You can also select yourself so that you can decrypt the message. After your select your recipients, make sure you select the Armor checkbox. This formats the encrypted message as random letters and numbers. Click OK and GPA will encrypt your message. If your message was a file, then the encrypted file will be in the same location as the original file and will have the same filename but it will have a .asc file extension. That file contains your encrypted message. Open it with a text editor to view it. If you used the Clipboard, your original message will turn into the encrypted message. It will start with -----BEGIN PGP MESSAGE----- and the rest will be gibberish. Step 5 - Send your encrypted message to your recipient Your encrypted message looks like gibberish. And it IS gibberish to everyone except the people you added as recipients. The recipients can decrypt the message back into text. Nobody else can. You can send the encrypted message in an email or post it anywhere. The contents of your message are safe. If you want your recipient to be able to send encrypted messages that you can read, make sure to include your own public key. To do this, select your own key in GPA and click Keys --> Export Keys. (You can also right click the key and select Export Keys) Save the file under any name. Send the file to your recipient or copy the text inside the file and send that. Your public key can also be freely given out. Step 6 - Receive an encrypted response and decrypt it Your recipient will receive your encrypted message and your public key. He or she will decrypt the message and then use your public key to create an encrypted message to you. (The same process that you just completed) Once you receive an encrypted message from your recipient you will need to decrypt it so you can read it. Save the encrypted message as a file or copy it. (Ctrl + C) Similar to before, if your encrypted message from your recipient is a file, click Window --> File Manager and then File --> Open to select the encrypted file. If your encrypted message from your recipient is in an email or webpage, select it and copy/paste it into GPA's Clipboard (Window --> Clipboard). To decrypt the message, Click File --> Decrypt. GPA will then ask you for your password to your key. Since you WROTE IT DOWN just type the password and click OK. GPA's File Manager will save the plaintext file in the same place as the encrypted file. GPA's Clipboard will convert the encrypted text to plaintext right in the Clipboard window.","title":"Gnu Privacy Assistant"},{"location":"cryptography-lab/02-create_pki_cfssl/","text":"CFSSL CFSSL is CloudFlare's PKI/TLS swiss army knife. It is both a command line tool and an HTTP API server for signing, verifying, and bundling TLS certificates. Step 0 Install Golang sudo apt install golang Step 1 Install CFSSL Download the binary package for your system at https://github.com/cloudflare/cfssl/releases.Unzip the archive and run the cfssl binary. Step 2 Generate Root CA Create a config file for the root-ca ca.json and past the below { \"CN\": \"CyberbayKin Root CA\", \"key\": { \"algo\": \"rsa\", \"size\": 2048 }, \"names\": [ { \"C\": \"MM\", \"L\": \"Yangon\", \"O\": \"CbyerbayKin\", \"OU\": \"CyberbayKin Root CA\", \"ST\": \"Myanmar\" } ] } Enter the following command to generate \"ca.pem\" and \"ca-key.pem\" cfssl gencert -initca ca.json | cfssljson -bare ca Step 3 Generate Intermediate CA To generate the intermediate the following config file \"intermediate-cs.json\" is needed. { \"CN\": \"CyberbayKin Intermediate CA\", \"key\": { \"algo\": \"rsa\", \"size\": 2048 }, \"names\": [ { \"C\": \"MM\", \"L\": \"Yangon\", \"O\": \"CyberbayKin\", \"OU\": \"CyberbayKin Intermediate CA\", \"ST\": \"Myanmar\" } ], \"ca\": { \"expiry\": \"42720h\" } } Generate the intermediate key pairs with the following command cfssl gencert -initca intermediate-ca.json | cfssljson -bare intermediate_ca Then create the profile.json configuration file to sign { \"signing\": { \"default\": { \"expiry\": \"8760h\" }, \"profiles\": { \"intermediate_ca\": { \"usages\": [ \"signing\", \"digital signature\", \"key encipherment\", \"cert sign\", \"crl sign\", \"server auth\", \"client auth\" ], \"expiry\": \"8760h\", \"ca_constraint\": { \"is_ca\": true, \"max_path_len\": 0, \"max_path_len_zero\": true } }, \"client\": { \"usages\": [ \"signing\", \"digital signature\", \"key encipherment\", \"client auth\" ], \"expiry\": \"8760h\" } } } } Sign the intermediate key pair with the root-ca by using the following command cfssl sign -ca ca.pem -ca-key ca-key.pem -config cfssl.json -profile intermediate_ca intermediate_ca.csr | cfssljson -bare intermediate_ca !notes The second \u201csign\u201d command uses the CA produced previously to sign the intermediate CA. It also uses the \u201ccfssl.json\u201d profile and specifies the \u201cintermediate_ca\u201d profile. Step 4 Generate Client Certificates Use the below config for the client1.json { \"CN\": \"client.cyberbaykin.com\", \"key\": { \"algo\": \"rsa\", \"size\": 2048 }, \"names\": [ { \"C\": \"MM\" \"L\": \"Yangon\", \"O\": \"Cyberbaykin\", \"OU\": \"Cyberbaykin Hosts\", \"ST\": \"Myanmar\" } ], \"hosts\": [ \"client1.cyberbaykin.com\", \"localhost\" ] } To generate the client certicate with the following command cfssl gencert -ca intermediate_ca.pem -ca-key intermediate_ca-key.pem -config cfssl.json -profile=client client1.json | cfssljson -bare host-1-client Extra How To Verify certificates with openssl https://www.misterpki.com/openssl-verify/ ref: https://rob-blackbourn.medium.com/how-to-use-cfssl-to-create-self-signed-certificates-d55f76ba5781","title":"CFSSL"},{"location":"cryptography-lab/02-create_pki_cfssl/#cfssl","text":"CFSSL is CloudFlare's PKI/TLS swiss army knife. It is both a command line tool and an HTTP API server for signing, verifying, and bundling TLS certificates. Step 0 Install Golang sudo apt install golang Step 1 Install CFSSL Download the binary package for your system at https://github.com/cloudflare/cfssl/releases.Unzip the archive and run the cfssl binary. Step 2 Generate Root CA Create a config file for the root-ca ca.json and past the below { \"CN\": \"CyberbayKin Root CA\", \"key\": { \"algo\": \"rsa\", \"size\": 2048 }, \"names\": [ { \"C\": \"MM\", \"L\": \"Yangon\", \"O\": \"CbyerbayKin\", \"OU\": \"CyberbayKin Root CA\", \"ST\": \"Myanmar\" } ] } Enter the following command to generate \"ca.pem\" and \"ca-key.pem\" cfssl gencert -initca ca.json | cfssljson -bare ca Step 3 Generate Intermediate CA To generate the intermediate the following config file \"intermediate-cs.json\" is needed. { \"CN\": \"CyberbayKin Intermediate CA\", \"key\": { \"algo\": \"rsa\", \"size\": 2048 }, \"names\": [ { \"C\": \"MM\", \"L\": \"Yangon\", \"O\": \"CyberbayKin\", \"OU\": \"CyberbayKin Intermediate CA\", \"ST\": \"Myanmar\" } ], \"ca\": { \"expiry\": \"42720h\" } } Generate the intermediate key pairs with the following command cfssl gencert -initca intermediate-ca.json | cfssljson -bare intermediate_ca Then create the profile.json configuration file to sign { \"signing\": { \"default\": { \"expiry\": \"8760h\" }, \"profiles\": { \"intermediate_ca\": { \"usages\": [ \"signing\", \"digital signature\", \"key encipherment\", \"cert sign\", \"crl sign\", \"server auth\", \"client auth\" ], \"expiry\": \"8760h\", \"ca_constraint\": { \"is_ca\": true, \"max_path_len\": 0, \"max_path_len_zero\": true } }, \"client\": { \"usages\": [ \"signing\", \"digital signature\", \"key encipherment\", \"client auth\" ], \"expiry\": \"8760h\" } } } } Sign the intermediate key pair with the root-ca by using the following command cfssl sign -ca ca.pem -ca-key ca-key.pem -config cfssl.json -profile intermediate_ca intermediate_ca.csr | cfssljson -bare intermediate_ca !notes The second \u201csign\u201d command uses the CA produced previously to sign the intermediate CA. It also uses the \u201ccfssl.json\u201d profile and specifies the \u201cintermediate_ca\u201d profile. Step 4 Generate Client Certificates Use the below config for the client1.json { \"CN\": \"client.cyberbaykin.com\", \"key\": { \"algo\": \"rsa\", \"size\": 2048 }, \"names\": [ { \"C\": \"MM\" \"L\": \"Yangon\", \"O\": \"Cyberbaykin\", \"OU\": \"Cyberbaykin Hosts\", \"ST\": \"Myanmar\" } ], \"hosts\": [ \"client1.cyberbaykin.com\", \"localhost\" ] } To generate the client certicate with the following command cfssl gencert -ca intermediate_ca.pem -ca-key intermediate_ca-key.pem -config cfssl.json -profile=client client1.json | cfssljson -bare host-1-client Extra How To Verify certificates with openssl https://www.misterpki.com/openssl-verify/ ref: https://rob-blackbourn.medium.com/how-to-use-cfssl-to-create-self-signed-certificates-d55f76ba5781","title":"CFSSL"},{"location":"endpoint-lab/wazuh-docker/","text":"Wazuh containers for Docker In this repository you will find the containers to run: Wazuh manager: it runs the Wazuh manager, Wazuh API and Filebeat OSS Wazuh dashboard: provides a web user interface to browse through alerts data and allows you to visualize agents configuration and status. Wazuh indexer: Wazuh indexer container (working as a single-node cluster or as a multi-node cluster). Be aware to increase the vm.max_map_count setting, as it's detailed in the Wazuh documentation . The folder build-docker-images contains a README explaining how to build the Wazuh images and the necessary assets. The folder indexer-certs-creator contains a README explaining how to create the certificates creator tool and the necessary assets. The folder single-node contains a README explaining how to run a Wazuh environment with one Wazuh manager, one Wazuh indexer, and one Wazuh dashboard. The folder multi-node contains a README explaining how to run a Wazuh environment with two Wazuh managers, three Wazuh indexer, and one Wazuh dashboard. Documentation Wazuh full documentation Wazuh documentation for Docker Docker hub Setup SSL certificate Before starting the environment it is required to provide an SSL certificate (or just generate one self-signed). Documentation on how to provide these two can be found at Wazuh Docker Documentation . Environment Variables Default values are included when available. Wazuh API_USERNAME=\"wazuh-wui\" # Wazuh API username API_PASSWORD=\"MyS3cr37P450r.*-\" # Wazuh API password - Must comply with requirements # (8+ length, uppercase, lowercase, specials chars) INDEXER_URL=https://wazuh.indexer:9200 # Wazuh indexer URL INDEXER_USERNAME=admin # Wazuh indexer Username INDEXER_PASSWORD=admin # Wazuh indexer Password FILEBEAT_SSL_VERIFICATION_MODE=full # Filebeat SSL Verification mode (full or none) SSL_CERTIFICATE_AUTHORITIES=\"\" # Path of Filebeat SSL CA SSL_CERTIFICATE=\"\" # Path of Filebeat SSL Certificate SSL_KEY=\"\" # Path of Filebeat SSL Key Dashboard PATTERN=\"wazuh-alerts-*\" # Default index pattern to use CHECKS_PATTERN=true # Defines which checks must to be consider by the healthcheck CHECKS_TEMPLATE=true # step once the Wazuh app starts. Values must to be true or false CHECKS_API=true CHECKS_SETUP=true EXTENSIONS_PCI=true # Enable PCI Extension EXTENSIONS_GDPR=true # Enable GDPR Extension EXTENSIONS_HIPAA=true # Enable HIPAA Extension EXTENSIONS_NIST=true # Enable NIST Extension EXTENSIONS_TSC=true # Enable TSC Extension EXTENSIONS_AUDIT=true # Enable Audit Extension EXTENSIONS_OSCAP=false # Enable OpenSCAP Extension EXTENSIONS_CISCAT=false # Enable CISCAT Extension EXTENSIONS_AWS=false # Enable AWS Extension EXTENSIONS_GCP=false # Enable GCP Extension EXTENSIONS_VIRUSTOTAL=false # Enable Virustotal Extension EXTENSIONS_OSQUERY=false # Enable OSQuery Extension EXTENSIONS_DOCKER=false # Enable Docker Extension APP_TIMEOUT=20000 # Defines maximum timeout to be used on the Wazuh app requests API_SELECTOR=true Defines if the user is allowed to change the selected API directly from the Wazuh app top menu IP_SELECTOR=true # Defines if the user is allowed to change the selected index pattern directly from the Wazuh app top menu IP_IGNORE=\"[]\" # List of index patterns to be ignored DASHBOARD_USERNAME=kibanaserver # Custom user saved in the dashboard keystore DASHBOARD_PASSWORD=kibanaserver # Custom password saved in the dashboard keystore WAZUH_MONITORING_ENABLED=true # Custom settings to enable/disable wazuh-monitoring indices WAZUH_MONITORING_FREQUENCY=900 # Custom setting to set the frequency for wazuh-monitoring indices cron task WAZUH_MONITORING_SHARDS=2 # Configure wazuh-monitoring-* indices shards and replicas WAZUH_MONITORING_REPLICAS=0 ## Directory structure \u251c\u2500\u2500 build-docker-images \u2502 \u251c\u2500\u2500 docker-compose.yml \u2502 \u251c\u2500\u2500 wazuh-dashboard \u2502 \u2502 \u251c\u2500\u2500 config \u2502 \u2502 \u2502 \u251c\u2500\u2500 config.sh \u2502 \u2502 \u2502 \u251c\u2500\u2500 config.yml \u2502 \u2502 \u2502 \u251c\u2500\u2500 entrypoint.sh \u2502 \u2502 \u2502 \u251c\u2500\u2500 opensearch_dashboards.yml \u2502 \u2502 \u2502 \u251c\u2500\u2500 wazuh_app_config.sh \u2502 \u2502 \u2502 \u2514\u2500\u2500 wazuh.yml \u2502 \u2502 \u2514\u2500\u2500 Dockerfile \u2502 \u251c\u2500\u2500 wazuh-indexer \u2502 \u2502 \u251c\u2500\u2500 config \u2502 \u2502 \u2502 \u251c\u2500\u2500 config.sh \u2502 \u2502 \u2502 \u251c\u2500\u2500 config.yml \u2502 \u2502 \u2502 \u251c\u2500\u2500 entrypoint.sh \u2502 \u2502 \u2502 \u251c\u2500\u2500 internal_users.yml \u2502 \u2502 \u2502 \u251c\u2500\u2500 opensearch.yml \u2502 \u2502 \u2502 \u251c\u2500\u2500 roles_mapping.yml \u2502 \u2502 \u2502 \u251c\u2500\u2500 roles.yml \u2502 \u2502 \u2502 \u2514\u2500\u2500 securityadmin.sh \u2502 \u2502 \u2514\u2500\u2500 Dockerfile \u2502 \u2514\u2500\u2500 wazuh-manager \u2502 \u251c\u2500\u2500 config \u2502 \u2502 \u251c\u2500\u2500 create_user.py \u2502 \u2502 \u251c\u2500\u2500 etc \u2502 \u2502 \u2502 \u251c\u2500\u2500 cont-init.d \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 0-wazuh-init \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 1-config-filebeat \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 2-manager \u2502 \u2502 \u2502 \u2514\u2500\u2500 services.d \u2502 \u2502 \u2502 \u251c\u2500\u2500 filebeat \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 finish \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 run \u2502 \u2502 \u2502 \u2514\u2500\u2500 ossec-logs \u2502 \u2502 \u2502 \u2514\u2500\u2500 run \u2502 \u2502 \u251c\u2500\u2500 filebeat.yml \u2502 \u2502 \u251c\u2500\u2500 permanent_data.env \u2502 \u2502 \u251c\u2500\u2500 permanent_data.sh \u2502 \u2502 \u2514\u2500\u2500 wazuh.repo \u2502 \u2514\u2500\u2500 Dockerfile \u251c\u2500\u2500 CHANGELOG.md \u251c\u2500\u2500 indexer-certs-creator \u2502 \u251c\u2500\u2500 config \u2502 \u2502 \u2514\u2500\u2500 entrypoint.sh \u2502 \u2514\u2500\u2500 Dockerfile \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 multi-node \u2502 \u251c\u2500\u2500 config \u2502 \u2502 \u251c\u2500\u2500 nginx \u2502 \u2502 \u2502 \u2514\u2500\u2500 nginx.conf \u2502 \u2502 \u251c\u2500\u2500 wazuh_cluster \u2502 \u2502 \u2502 \u251c\u2500\u2500 wazuh_manager.conf \u2502 \u2502 \u2502 \u2514\u2500\u2500 wazuh_worker.conf \u2502 \u2502 \u251c\u2500\u2500 wazuh_dashboard \u2502 \u2502 \u2502 \u251c\u2500\u2500 opensearch_dashboards.yml \u2502 \u2502 \u2502 \u2514\u2500\u2500 wazuh.yml \u2502 \u2502 \u251c\u2500\u2500 wazuh_indexer \u2502 \u2502 \u2502 \u251c\u2500\u2500 internal_users.yml \u2502 \u2502 \u2502 \u251c\u2500\u2500 wazuh1.indexer.yml \u2502 \u2502 \u2502 \u251c\u2500\u2500 wazuh2.indexer.yml \u2502 \u2502 \u2502 \u2514\u2500\u2500 wazuh3.indexer.yml \u2502 \u2502 \u2514\u2500\u2500 wazuh_indexer_ssl_certs \u2502 \u2502 \u2514\u2500\u2500 certs.yml \u2502 \u251c\u2500\u2500 docker-compose.yml \u2502 \u251c\u2500\u2500 generate-indexer-certs.yml \u2502 \u251c\u2500\u2500 Migration-to-Wazuh-4.3.md \u2502 \u2514\u2500\u2500 volume-migrator.sh \u251c\u2500\u2500 README.md \u251c\u2500\u2500 single-node \u2502 \u251c\u2500\u2500 config \u2502 \u2502 \u251c\u2500\u2500 wazuh_cluster \u2502 \u2502 \u2502 \u2514\u2500\u2500 wazuh_manager.conf \u2502 \u2502 \u251c\u2500\u2500 wazuh_dashboard \u2502 \u2502 \u2502 \u251c\u2500\u2500 opensearch_dashboards.yml \u2502 \u2502 \u2502 \u2514\u2500\u2500 wazuh.yml \u2502 \u2502 \u251c\u2500\u2500 wazuh_indexer \u2502 \u2502 \u2502 \u251c\u2500\u2500 internal_users.yml \u2502 \u2502 \u2502 \u2514\u2500\u2500 wazuh.indexer.yml \u2502 \u2502 \u2514\u2500\u2500 wazuh_indexer_ssl_certs \u2502 \u2502 \u251c\u2500\u2500 admin-key.pem \u2502 \u2502 \u251c\u2500\u2500 admin.pem \u2502 \u2502 \u251c\u2500\u2500 certs.yml \u2502 \u2502 \u251c\u2500\u2500 root-ca.key \u2502 \u2502 \u251c\u2500\u2500 root-ca.pem \u2502 \u2502 \u251c\u2500\u2500 wazuh.dashboard-key.pem \u2502 \u2502 \u251c\u2500\u2500 wazuh.dashboard.pem \u2502 \u2502 \u251c\u2500\u2500 wazuh.indexer-key.pem \u2502 \u2502 \u251c\u2500\u2500 wazuh.indexer.pem \u2502 \u2502 \u251c\u2500\u2500 wazuh.manager-key.pem \u2502 \u2502 \u2514\u2500\u2500 wazuh.manager.pem \u2502 \u251c\u2500\u2500 docker-compose.yml \u2502 \u251c\u2500\u2500 generate-indexer-certs.yml \u2502 \u2514\u2500\u2500 README.md \u2514\u2500\u2500 VERSION Branches master branch contains the latest code, be aware of possible bugs on this branch. stable branch on correspond to the last Wazuh stable version. Compatibility Matrix Wazuh version ODFE XPACK v4.3.9 v4.3.8 v4.3.7 v4.3.6 v4.3.5 v4.3.4 v4.3.3 v4.3.2 v4.3.1 v4.3.0 v4.2.7 1.13.2 7.11.2 v4.2.6 1.13.2 7.11.2 v4.2.5 1.13.2 7.11.2 v4.2.4 1.13.2 7.11.2 v4.2.3 1.13.2 7.11.2 v4.2.2 1.13.2 7.11.2 v4.2.1 1.13.2 7.11.2 v4.2.0 1.13.2 7.10.2 v4.1.5 1.13.2 7.10.2 v4.1.4 1.12.0 7.10.2 v4.1.3 1.12.0 7.10.2 v4.1.2 1.12.0 7.10.2 v4.1.1 1.12.0 7.10.2 v4.1.0 1.12.0 7.10.2 v4.0.4 1.11.0 v4.0.3 1.11.0 v4.0.2 1.11.0 v4.0.1 1.11.0 v4.0.0 1.10.1 Credits and Thank you These Docker containers are based on: \"deviantony\" dockerfiles which can be found at https://github.com/deviantony/docker-elk \"xetus-oss\" dockerfiles, which can be found at https://github.com/xetus-oss/docker-ossec-server We thank you them and everyone else who has contributed to this project. License and copyright Wazuh Docker Copyright (C) 2017, Wazuh Inc. (License GPLv2) Web references Wazuh website","title":"Wazuh containers for Docker"},{"location":"endpoint-lab/wazuh-docker/#wazuh-containers-for-docker","text":"In this repository you will find the containers to run: Wazuh manager: it runs the Wazuh manager, Wazuh API and Filebeat OSS Wazuh dashboard: provides a web user interface to browse through alerts data and allows you to visualize agents configuration and status. Wazuh indexer: Wazuh indexer container (working as a single-node cluster or as a multi-node cluster). Be aware to increase the vm.max_map_count setting, as it's detailed in the Wazuh documentation . The folder build-docker-images contains a README explaining how to build the Wazuh images and the necessary assets. The folder indexer-certs-creator contains a README explaining how to create the certificates creator tool and the necessary assets. The folder single-node contains a README explaining how to run a Wazuh environment with one Wazuh manager, one Wazuh indexer, and one Wazuh dashboard. The folder multi-node contains a README explaining how to run a Wazuh environment with two Wazuh managers, three Wazuh indexer, and one Wazuh dashboard.","title":"Wazuh containers for Docker"},{"location":"endpoint-lab/wazuh-docker/#documentation","text":"Wazuh full documentation Wazuh documentation for Docker Docker hub","title":"Documentation"},{"location":"endpoint-lab/wazuh-docker/#setup-ssl-certificate","text":"Before starting the environment it is required to provide an SSL certificate (or just generate one self-signed). Documentation on how to provide these two can be found at Wazuh Docker Documentation .","title":"Setup SSL certificate"},{"location":"endpoint-lab/wazuh-docker/#environment-variables","text":"Default values are included when available.","title":"Environment Variables"},{"location":"endpoint-lab/wazuh-docker/#wazuh","text":"API_USERNAME=\"wazuh-wui\" # Wazuh API username API_PASSWORD=\"MyS3cr37P450r.*-\" # Wazuh API password - Must comply with requirements # (8+ length, uppercase, lowercase, specials chars) INDEXER_URL=https://wazuh.indexer:9200 # Wazuh indexer URL INDEXER_USERNAME=admin # Wazuh indexer Username INDEXER_PASSWORD=admin # Wazuh indexer Password FILEBEAT_SSL_VERIFICATION_MODE=full # Filebeat SSL Verification mode (full or none) SSL_CERTIFICATE_AUTHORITIES=\"\" # Path of Filebeat SSL CA SSL_CERTIFICATE=\"\" # Path of Filebeat SSL Certificate SSL_KEY=\"\" # Path of Filebeat SSL Key","title":"Wazuh"},{"location":"endpoint-lab/wazuh-docker/#dashboard","text":"PATTERN=\"wazuh-alerts-*\" # Default index pattern to use CHECKS_PATTERN=true # Defines which checks must to be consider by the healthcheck CHECKS_TEMPLATE=true # step once the Wazuh app starts. Values must to be true or false CHECKS_API=true CHECKS_SETUP=true EXTENSIONS_PCI=true # Enable PCI Extension EXTENSIONS_GDPR=true # Enable GDPR Extension EXTENSIONS_HIPAA=true # Enable HIPAA Extension EXTENSIONS_NIST=true # Enable NIST Extension EXTENSIONS_TSC=true # Enable TSC Extension EXTENSIONS_AUDIT=true # Enable Audit Extension EXTENSIONS_OSCAP=false # Enable OpenSCAP Extension EXTENSIONS_CISCAT=false # Enable CISCAT Extension EXTENSIONS_AWS=false # Enable AWS Extension EXTENSIONS_GCP=false # Enable GCP Extension EXTENSIONS_VIRUSTOTAL=false # Enable Virustotal Extension EXTENSIONS_OSQUERY=false # Enable OSQuery Extension EXTENSIONS_DOCKER=false # Enable Docker Extension APP_TIMEOUT=20000 # Defines maximum timeout to be used on the Wazuh app requests API_SELECTOR=true Defines if the user is allowed to change the selected API directly from the Wazuh app top menu IP_SELECTOR=true # Defines if the user is allowed to change the selected index pattern directly from the Wazuh app top menu IP_IGNORE=\"[]\" # List of index patterns to be ignored DASHBOARD_USERNAME=kibanaserver # Custom user saved in the dashboard keystore DASHBOARD_PASSWORD=kibanaserver # Custom password saved in the dashboard keystore WAZUH_MONITORING_ENABLED=true # Custom settings to enable/disable wazuh-monitoring indices WAZUH_MONITORING_FREQUENCY=900 # Custom setting to set the frequency for wazuh-monitoring indices cron task WAZUH_MONITORING_SHARDS=2 # Configure wazuh-monitoring-* indices shards and replicas WAZUH_MONITORING_REPLICAS=0 ##","title":"Dashboard"},{"location":"endpoint-lab/wazuh-docker/#directory-structure","text":"\u251c\u2500\u2500 build-docker-images \u2502 \u251c\u2500\u2500 docker-compose.yml \u2502 \u251c\u2500\u2500 wazuh-dashboard \u2502 \u2502 \u251c\u2500\u2500 config \u2502 \u2502 \u2502 \u251c\u2500\u2500 config.sh \u2502 \u2502 \u2502 \u251c\u2500\u2500 config.yml \u2502 \u2502 \u2502 \u251c\u2500\u2500 entrypoint.sh \u2502 \u2502 \u2502 \u251c\u2500\u2500 opensearch_dashboards.yml \u2502 \u2502 \u2502 \u251c\u2500\u2500 wazuh_app_config.sh \u2502 \u2502 \u2502 \u2514\u2500\u2500 wazuh.yml \u2502 \u2502 \u2514\u2500\u2500 Dockerfile \u2502 \u251c\u2500\u2500 wazuh-indexer \u2502 \u2502 \u251c\u2500\u2500 config \u2502 \u2502 \u2502 \u251c\u2500\u2500 config.sh \u2502 \u2502 \u2502 \u251c\u2500\u2500 config.yml \u2502 \u2502 \u2502 \u251c\u2500\u2500 entrypoint.sh \u2502 \u2502 \u2502 \u251c\u2500\u2500 internal_users.yml \u2502 \u2502 \u2502 \u251c\u2500\u2500 opensearch.yml \u2502 \u2502 \u2502 \u251c\u2500\u2500 roles_mapping.yml \u2502 \u2502 \u2502 \u251c\u2500\u2500 roles.yml \u2502 \u2502 \u2502 \u2514\u2500\u2500 securityadmin.sh \u2502 \u2502 \u2514\u2500\u2500 Dockerfile \u2502 \u2514\u2500\u2500 wazuh-manager \u2502 \u251c\u2500\u2500 config \u2502 \u2502 \u251c\u2500\u2500 create_user.py \u2502 \u2502 \u251c\u2500\u2500 etc \u2502 \u2502 \u2502 \u251c\u2500\u2500 cont-init.d \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 0-wazuh-init \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 1-config-filebeat \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 2-manager \u2502 \u2502 \u2502 \u2514\u2500\u2500 services.d \u2502 \u2502 \u2502 \u251c\u2500\u2500 filebeat \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 finish \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 run \u2502 \u2502 \u2502 \u2514\u2500\u2500 ossec-logs \u2502 \u2502 \u2502 \u2514\u2500\u2500 run \u2502 \u2502 \u251c\u2500\u2500 filebeat.yml \u2502 \u2502 \u251c\u2500\u2500 permanent_data.env \u2502 \u2502 \u251c\u2500\u2500 permanent_data.sh \u2502 \u2502 \u2514\u2500\u2500 wazuh.repo \u2502 \u2514\u2500\u2500 Dockerfile \u251c\u2500\u2500 CHANGELOG.md \u251c\u2500\u2500 indexer-certs-creator \u2502 \u251c\u2500\u2500 config \u2502 \u2502 \u2514\u2500\u2500 entrypoint.sh \u2502 \u2514\u2500\u2500 Dockerfile \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 multi-node \u2502 \u251c\u2500\u2500 config \u2502 \u2502 \u251c\u2500\u2500 nginx \u2502 \u2502 \u2502 \u2514\u2500\u2500 nginx.conf \u2502 \u2502 \u251c\u2500\u2500 wazuh_cluster \u2502 \u2502 \u2502 \u251c\u2500\u2500 wazuh_manager.conf \u2502 \u2502 \u2502 \u2514\u2500\u2500 wazuh_worker.conf \u2502 \u2502 \u251c\u2500\u2500 wazuh_dashboard \u2502 \u2502 \u2502 \u251c\u2500\u2500 opensearch_dashboards.yml \u2502 \u2502 \u2502 \u2514\u2500\u2500 wazuh.yml \u2502 \u2502 \u251c\u2500\u2500 wazuh_indexer \u2502 \u2502 \u2502 \u251c\u2500\u2500 internal_users.yml \u2502 \u2502 \u2502 \u251c\u2500\u2500 wazuh1.indexer.yml \u2502 \u2502 \u2502 \u251c\u2500\u2500 wazuh2.indexer.yml \u2502 \u2502 \u2502 \u2514\u2500\u2500 wazuh3.indexer.yml \u2502 \u2502 \u2514\u2500\u2500 wazuh_indexer_ssl_certs \u2502 \u2502 \u2514\u2500\u2500 certs.yml \u2502 \u251c\u2500\u2500 docker-compose.yml \u2502 \u251c\u2500\u2500 generate-indexer-certs.yml \u2502 \u251c\u2500\u2500 Migration-to-Wazuh-4.3.md \u2502 \u2514\u2500\u2500 volume-migrator.sh \u251c\u2500\u2500 README.md \u251c\u2500\u2500 single-node \u2502 \u251c\u2500\u2500 config \u2502 \u2502 \u251c\u2500\u2500 wazuh_cluster \u2502 \u2502 \u2502 \u2514\u2500\u2500 wazuh_manager.conf \u2502 \u2502 \u251c\u2500\u2500 wazuh_dashboard \u2502 \u2502 \u2502 \u251c\u2500\u2500 opensearch_dashboards.yml \u2502 \u2502 \u2502 \u2514\u2500\u2500 wazuh.yml \u2502 \u2502 \u251c\u2500\u2500 wazuh_indexer \u2502 \u2502 \u2502 \u251c\u2500\u2500 internal_users.yml \u2502 \u2502 \u2502 \u2514\u2500\u2500 wazuh.indexer.yml \u2502 \u2502 \u2514\u2500\u2500 wazuh_indexer_ssl_certs \u2502 \u2502 \u251c\u2500\u2500 admin-key.pem \u2502 \u2502 \u251c\u2500\u2500 admin.pem \u2502 \u2502 \u251c\u2500\u2500 certs.yml \u2502 \u2502 \u251c\u2500\u2500 root-ca.key \u2502 \u2502 \u251c\u2500\u2500 root-ca.pem \u2502 \u2502 \u251c\u2500\u2500 wazuh.dashboard-key.pem \u2502 \u2502 \u251c\u2500\u2500 wazuh.dashboard.pem \u2502 \u2502 \u251c\u2500\u2500 wazuh.indexer-key.pem \u2502 \u2502 \u251c\u2500\u2500 wazuh.indexer.pem \u2502 \u2502 \u251c\u2500\u2500 wazuh.manager-key.pem \u2502 \u2502 \u2514\u2500\u2500 wazuh.manager.pem \u2502 \u251c\u2500\u2500 docker-compose.yml \u2502 \u251c\u2500\u2500 generate-indexer-certs.yml \u2502 \u2514\u2500\u2500 README.md \u2514\u2500\u2500 VERSION","title":"Directory structure"},{"location":"endpoint-lab/wazuh-docker/#branches","text":"master branch contains the latest code, be aware of possible bugs on this branch. stable branch on correspond to the last Wazuh stable version.","title":"Branches"},{"location":"endpoint-lab/wazuh-docker/#compatibility-matrix","text":"Wazuh version ODFE XPACK v4.3.9 v4.3.8 v4.3.7 v4.3.6 v4.3.5 v4.3.4 v4.3.3 v4.3.2 v4.3.1 v4.3.0 v4.2.7 1.13.2 7.11.2 v4.2.6 1.13.2 7.11.2 v4.2.5 1.13.2 7.11.2 v4.2.4 1.13.2 7.11.2 v4.2.3 1.13.2 7.11.2 v4.2.2 1.13.2 7.11.2 v4.2.1 1.13.2 7.11.2 v4.2.0 1.13.2 7.10.2 v4.1.5 1.13.2 7.10.2 v4.1.4 1.12.0 7.10.2 v4.1.3 1.12.0 7.10.2 v4.1.2 1.12.0 7.10.2 v4.1.1 1.12.0 7.10.2 v4.1.0 1.12.0 7.10.2 v4.0.4 1.11.0 v4.0.3 1.11.0 v4.0.2 1.11.0 v4.0.1 1.11.0 v4.0.0 1.10.1","title":"Compatibility Matrix"},{"location":"endpoint-lab/wazuh-docker/#credits-and-thank-you","text":"These Docker containers are based on: \"deviantony\" dockerfiles which can be found at https://github.com/deviantony/docker-elk \"xetus-oss\" dockerfiles, which can be found at https://github.com/xetus-oss/docker-ossec-server We thank you them and everyone else who has contributed to this project.","title":"Credits and Thank you"},{"location":"endpoint-lab/wazuh-docker/#license-and-copyright","text":"Wazuh Docker Copyright (C) 2017, Wazuh Inc. (License GPLv2)","title":"License and copyright"},{"location":"endpoint-lab/wazuh-docker/#web-references","text":"Wazuh website","title":"Web references"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/","text":"Change Log All notable changes to this project will be documented in this file. Wazuh Docker v4.3.9 Added Update Wazuh to version 4.3.9 Wazuh Docker v4.3.8 Added Update Wazuh to version 4.3.8 Wazuh Docker v4.3.7 Added Update Wazuh to version 4.3.7 Wazuh Docker v4.3.6 Added Update Wazuh to version 4.3.6 Wazuh Docker v4.3.5 Added Update Wazuh to version 4.3.5 Wazuh Docker v4.3.4 Added Update Wazuh to version 4.3.4 Wazuh Docker v4.3.3 Added Update Wazuh to version 4.3.3 Wazuh Docker v4.3.2 Added Update Wazuh to version 4.3.2 Wazuh Docker v4.3.1 Added Update Wazuh to version 4.3.1 Wazuh Docker v4.3.0 Added Update Wazuh to version 4.3.0 Wazuh Docker v4.2.7 Added Update Wazuh to version 4.2.7 Wazuh Docker v4.2.6 Added Update Wazuh to version 4.2.6 Wazuh Docker v4.2.5 Added Update Wazuh to version 4.2.5 Wazuh Docker v4.2.4 Added Update Wazuh to version 4.2.4 Wazuh Docker v4.2.3 Added Update Wazuh to version 4.2.3 Wazuh Docker v4.2.2 Added Update Wazuh to version 4.2.2 Wazuh Docker v4.2.1 Added Update Wazuh to version 4.2.1 Wazuh Docker v4.2.0 Added Update Wazuh to version 4.2.0 Wazuh Docker v4.1.5 Added Update Wazuh to version 4.1.5 Update ODFE compatibility to version 1.13.2 Wazuh Docker v4.1.4 Added Update Wazuh to version 4.1.4 Wazuh Docker v4.1.3 Added Update Wazuh to version 4.1.3 Wazuh Docker v4.1.2 Added Update Wazuh to version 4.1.2 Wazuh Docker v4.1.1 Added Update Wazuh to version 4.1.1 Wazuh Docker v4.1.0 Added Update Wazuh to version 4.1.0 Update ODFE compatibility to version 1.12.0 Add support for Elasticsearch (xpack) images once again (7.10.2) ( @xr09 ) #409 Re-enable entrypoint scripts ( @xr09 ) #435 Add Goss binary for healthchecks ( @xr09 ) $441 Update s6-overlay to latest version Wazuh Docker v4.0.4_1.11.0 Added Update to Wazuh version 4.0.4 Wazuh Docker v4.0.3_1.11.0 Added Update to Wazuh version 4.0.3 Wazuh Docker v4.0.2_1.11.0 Added Update to Wazuh version 4.0.2 Wazuh Docker v4.0.1_1.11.0 Added Update to Wazuh version 4.0.1 Opendistro 1.11.0 compatiblity Re-enabled dumping ossec.log to stdout Wazuh Docker v4.0.0_1.10.1 Added Update to Wazuh version 4.0.0 Updating Wazuh cluster key dynamically ( @1stOfHisGame ) #393 Switched to CentOS 7 for base image ( @xr09 ) #259 Using s6-overlay for process management ( @xr09 ) #274 Allow the creation of custom API users ( @xr09 ) #395 OpenDistro support ( @xr09 ) #373 Changed Removal of Elastic images Wazuh Docker v3.13.2_7.9.1 Added Update to Wazuh version 3.13.2_7.9.1 Add CLUSTER_NETWORK_HOST environment variable ( @jfut ) #372 Fixed Too many redirects when running on port 80 ( @chowmean ) #377 Move Filebeat installation to build stage ( @xr09 ) #378 Wazuh Docker v3.13.1_7.8.0 Added Update to Wazuh version 3.13.1_7.8.0 Wazuh Docker v3.13.0_7.7.1 Added Update to Wazuh version 3.13.3_7.7.1 Fixed Save agentless state ( @xr09 ) #350 Use HTTP credentials for service check when required ( @xr09 ) #356 Wazuh Docker v3.12.3_7.6.2 Added Update to Wazuh version 3.12.3_7.6.2 Wazuh Docker v3.12.2_7.6.2 Added Update to Wazuh version 3.12.2_7.6.2 Wazuh Docker v3.12.1_7.6.2 Added Update to Wazuh version 3.12.1_7.6.2 Fixed Agent timestamp not being properly saved ( @xr09 ) #323 Wazuh Docker v3.12.0_7.6.1 Added Update to Wazuh version 3.12.0_7.6.1 Wazuh Docker v3.11.4_7.6.1 Added Update to Wazuh version 3.11.4_7.6.1 Enable HTTP v2 on nginx ( @xr09 ) #308 Fixed Updated NGINX config syntax ( @xr09 ) #303 Wazuh Docker v3.11.3_7.5.2 Added Update to Wazuh version 3.11.3_7.5.2 Wazuh Docker v3.11.2_7.5.1 Added Bumped Node.js to version 10 ( @xr09 ) #8615cd4 Fixed Fix S3 Plugin ( @AnthonySendra ) #293 Wazuh Docker v3.11.1_7.5.1 Added Update to Wazuh version 3.11.1_7.5.1 Filebeat configuration file updated to latest version ( @manuasir ) #271 Allow using the hostname as node_name for managers ( @JPLachance ) #261 Wazuh Docker v3.11.0_7.5.1 Added Update to Wazuh version 3.11.0_7.5.1 Wazuh Docker v3.10.2_7.5.0 Added Update to Wazuh version 3.10.2_7.5.0 Wazuh Docker v3.10.2_7.3.2 Added Update to Wazuh version 3.10.2_7.3.2 Wazuh Docker v3.10.0_7.3.2 Added Update to Wazuh version 3.10.0_7.3.2 Wazuh Docker v3.9.5_7.2.1 Added Update to Wazuh version 3.9.5_7.2.1 Wazuh Docker v3.9.4_7.2.0 Added Update to Wazuh version 3.9.4_7.2.0 Implemented Wazuh Filebeat Module ( jm404 ) #2a77c6a Wazuh Docker v3.9.3_7.2.0 Fixed Wazuh-docker reinserts cluster settings after resuming containers ( @manuasir ) #213 Wazuh Docker v3.9.2_7.1.1 Added Update to Wazuh version 3.9.2_7.1.1 Wazuh Docker v3.9.2_6.8.0 Added Update to Wazuh version 3.9.2_6.8.0 Wazuh Docker v3.9.1_7.1.0 Added Support for Elastic v7.1.0 New environment variables for Kibana ( @manuasir ) #22ad43 Wazuh Docker v3.9.1_6.8.0 Added Update to Wazuh version 3.9.1_6.8.0 ( #181 ) Fixed Fixed ELASTICSEARCH_KIBANA_IP environment variable ( @manuasir ) ( #181 ) Wazuh Docker v3.9.0_6.7.2 Changed Update Elastic Stack version to 6.7.2. Wazuh Docker v3.9.0_6.7.1 Added Support for xPACK authorized requests ( @manuasir ) ( #119 ) Add Elasticsearch cluster configuration ( @SitoRBJ ). ( #146 ) Add Elasticsearch cluster configuration ( @Phandora ) ( #140 ) Setting Nginx to support several user/passwords in Kibana ( @toniMR ) ( #136 ) Changed Use LS_JAVA_OPTS instead of old LS_HEAP_SIZE ( @ruffy91 ) ( #139 ) Changing the original Wazuh docker image to allow adding code in the entrypoint ( @Phandora ) ( #151 ) Removed Removing files from Wazuh image ( @Phandora ) ( #153 ) Wazuh Docker v3.8.2_6.7.0 Changed Update Elastic Stack version to 6.7.0. ( #144 ) Wazuh Docker v3.8.2_6.6.2 Changed Update Elastic Stack version to 6.6.2. ( #130 ) Wazuh Docker v3.8.2_6.6.1 Changed Update Elastic Stack version to 6.6.1. ( #129 ) Wazuh Docker v3.8.2_6.5.4 Added Add Wazuh-Elasticsearch. ( #106 ) Store Filebeat /var/lib/filebeat/registry. ( #109 ) Adding the option to disable some xpack features. ( #111 ) Wazuh-Kibana customizable at plugin level. ( #117 ) Adding env variables for alerts data flow. ( #118 ) New Logstash entrypoint added. ( #135 ) Welcome screen management. ( #133 ) Changed Update to Wazuh version 3.8.2. ( #105 ) Removed Remove alerts created in build time. ( #137 ) Wazuh Docker v3.8.1_6.5.4 Changed Update to Wazuh version 3.8.1. ( #102 ) Wazuh Docker v3.8.0_6.5.4 Changed Upgrade version 3.8.0_6.5.4. ( #97 ) Removed Remove cluster.py work around. ( #99 ) Wazuh Docker v3.7.2_6.5.4 Added Improvements to Kibana settings added. ( #91 ) Add Kibana environmental variables for Wazuh APP config.yml. ( #89 ) Changed Update Elastic Stack version to 6.5.4. ( #82 ) Add env credentials for nginx. ( #86 ) Improve filebeat configuration ( #88 ) Fixed Temporary fix for Wazuh cluster master node in Kubernetes. ( #84 ) Wazuh Docker v3.7.2_6.5.3 Changed Erasing temporary fix for AWS integration. ( #81 ) Fixed Upgrading errors due to wrong files. ( #80 ) Wazuh Docker v3.7.0_6.5.0 Changed Adapt to Elastic stack 6.5.0. Wazuh Docker v3.7.0_6.4.3 Added Allow custom scripts or commands before service start ( #58 ) Added description for wazuh-nginx ( #59 ) Added license file to match https://github.com/wazuh/wazuh LICENSE ( #60 ) Added SMTP packages ( #67 ) Changed Increased proxy buffer for NGINX Kibana ( #51 ) Updated logstash config to remove deprecation warnings ( #55 ) Set ossec user's home path ( #61 ) Fixed Fixed a bug that prevents the API from starting when the Wazuh manager was updated. Change in the files that are stored in the volume. ( #65 ) Fixed script reference ( #62 ) Wazuh Docker v3.6.1_6.4.3 Wazuh-Docker starting point.","title":"Change Log"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#change-log","text":"All notable changes to this project will be documented in this file.","title":"Change Log"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v439","text":"","title":"Wazuh Docker v4.3.9"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added","text":"Update Wazuh to version 4.3.9","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v438","text":"","title":"Wazuh Docker v4.3.8"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_1","text":"Update Wazuh to version 4.3.8","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v437","text":"","title":"Wazuh Docker v4.3.7"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_2","text":"Update Wazuh to version 4.3.7","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v436","text":"","title":"Wazuh Docker v4.3.6"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_3","text":"Update Wazuh to version 4.3.6","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v435","text":"","title":"Wazuh Docker v4.3.5"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_4","text":"Update Wazuh to version 4.3.5","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v434","text":"","title":"Wazuh Docker v4.3.4"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_5","text":"Update Wazuh to version 4.3.4","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v433","text":"","title":"Wazuh Docker v4.3.3"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_6","text":"Update Wazuh to version 4.3.3","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v432","text":"","title":"Wazuh Docker v4.3.2"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_7","text":"Update Wazuh to version 4.3.2","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v431","text":"","title":"Wazuh Docker v4.3.1"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_8","text":"Update Wazuh to version 4.3.1","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v430","text":"","title":"Wazuh Docker v4.3.0"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_9","text":"Update Wazuh to version 4.3.0","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v427","text":"","title":"Wazuh Docker v4.2.7"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_10","text":"Update Wazuh to version 4.2.7","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v426","text":"","title":"Wazuh Docker v4.2.6"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_11","text":"Update Wazuh to version 4.2.6","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v425","text":"","title":"Wazuh Docker v4.2.5"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_12","text":"Update Wazuh to version 4.2.5","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v424","text":"","title":"Wazuh Docker v4.2.4"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_13","text":"Update Wazuh to version 4.2.4","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v423","text":"","title":"Wazuh Docker v4.2.3"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_14","text":"Update Wazuh to version 4.2.3","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v422","text":"","title":"Wazuh Docker v4.2.2"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_15","text":"Update Wazuh to version 4.2.2","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v421","text":"","title":"Wazuh Docker v4.2.1"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_16","text":"Update Wazuh to version 4.2.1","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v420","text":"","title":"Wazuh Docker v4.2.0"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_17","text":"Update Wazuh to version 4.2.0","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v415","text":"","title":"Wazuh Docker v4.1.5"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_18","text":"Update Wazuh to version 4.1.5 Update ODFE compatibility to version 1.13.2","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v414","text":"","title":"Wazuh Docker v4.1.4"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_19","text":"Update Wazuh to version 4.1.4","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v413","text":"","title":"Wazuh Docker v4.1.3"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_20","text":"Update Wazuh to version 4.1.3","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v412","text":"","title":"Wazuh Docker v4.1.2"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_21","text":"Update Wazuh to version 4.1.2","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v411","text":"","title":"Wazuh Docker v4.1.1"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_22","text":"Update Wazuh to version 4.1.1","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v410","text":"","title":"Wazuh Docker v4.1.0"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_23","text":"Update Wazuh to version 4.1.0 Update ODFE compatibility to version 1.12.0 Add support for Elasticsearch (xpack) images once again (7.10.2) ( @xr09 ) #409 Re-enable entrypoint scripts ( @xr09 ) #435 Add Goss binary for healthchecks ( @xr09 ) $441 Update s6-overlay to latest version","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v404_1110","text":"","title":"Wazuh Docker v4.0.4_1.11.0"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_24","text":"Update to Wazuh version 4.0.4","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v403_1110","text":"","title":"Wazuh Docker v4.0.3_1.11.0"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_25","text":"Update to Wazuh version 4.0.3","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v402_1110","text":"","title":"Wazuh Docker v4.0.2_1.11.0"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_26","text":"Update to Wazuh version 4.0.2","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v401_1110","text":"","title":"Wazuh Docker v4.0.1_1.11.0"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_27","text":"Update to Wazuh version 4.0.1 Opendistro 1.11.0 compatiblity Re-enabled dumping ossec.log to stdout","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v400_1101","text":"","title":"Wazuh Docker v4.0.0_1.10.1"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_28","text":"Update to Wazuh version 4.0.0 Updating Wazuh cluster key dynamically ( @1stOfHisGame ) #393 Switched to CentOS 7 for base image ( @xr09 ) #259 Using s6-overlay for process management ( @xr09 ) #274 Allow the creation of custom API users ( @xr09 ) #395 OpenDistro support ( @xr09 ) #373","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#changed","text":"Removal of Elastic images","title":"Changed"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v3132_791","text":"","title":"Wazuh Docker v3.13.2_7.9.1"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_29","text":"Update to Wazuh version 3.13.2_7.9.1 Add CLUSTER_NETWORK_HOST environment variable ( @jfut ) #372","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#fixed","text":"Too many redirects when running on port 80 ( @chowmean ) #377 Move Filebeat installation to build stage ( @xr09 ) #378","title":"Fixed"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v3131_780","text":"","title":"Wazuh Docker v3.13.1_7.8.0"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_30","text":"Update to Wazuh version 3.13.1_7.8.0","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v3130_771","text":"","title":"Wazuh Docker v3.13.0_7.7.1"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_31","text":"Update to Wazuh version 3.13.3_7.7.1","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#fixed_1","text":"Save agentless state ( @xr09 ) #350 Use HTTP credentials for service check when required ( @xr09 ) #356","title":"Fixed"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v3123_762","text":"","title":"Wazuh Docker v3.12.3_7.6.2"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_32","text":"Update to Wazuh version 3.12.3_7.6.2","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v3122_762","text":"","title":"Wazuh Docker v3.12.2_7.6.2"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_33","text":"Update to Wazuh version 3.12.2_7.6.2","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v3121_762","text":"","title":"Wazuh Docker v3.12.1_7.6.2"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_34","text":"Update to Wazuh version 3.12.1_7.6.2","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#fixed_2","text":"Agent timestamp not being properly saved ( @xr09 ) #323","title":"Fixed"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v3120_761","text":"","title":"Wazuh Docker v3.12.0_7.6.1"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_35","text":"Update to Wazuh version 3.12.0_7.6.1","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v3114_761","text":"","title":"Wazuh Docker v3.11.4_7.6.1"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_36","text":"Update to Wazuh version 3.11.4_7.6.1 Enable HTTP v2 on nginx ( @xr09 ) #308","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#fixed_3","text":"Updated NGINX config syntax ( @xr09 ) #303","title":"Fixed"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v3113_752","text":"","title":"Wazuh Docker v3.11.3_7.5.2"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_37","text":"Update to Wazuh version 3.11.3_7.5.2","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v3112_751","text":"","title":"Wazuh Docker v3.11.2_7.5.1"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_38","text":"Bumped Node.js to version 10 ( @xr09 ) #8615cd4","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#fixed_4","text":"Fix S3 Plugin ( @AnthonySendra ) #293","title":"Fixed"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v3111_751","text":"","title":"Wazuh Docker v3.11.1_7.5.1"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_39","text":"Update to Wazuh version 3.11.1_7.5.1 Filebeat configuration file updated to latest version ( @manuasir ) #271 Allow using the hostname as node_name for managers ( @JPLachance ) #261","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v3110_751","text":"","title":"Wazuh Docker v3.11.0_7.5.1"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_40","text":"Update to Wazuh version 3.11.0_7.5.1","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v3102_750","text":"","title":"Wazuh Docker v3.10.2_7.5.0"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_41","text":"Update to Wazuh version 3.10.2_7.5.0","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v3102_732","text":"","title":"Wazuh Docker v3.10.2_7.3.2"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_42","text":"Update to Wazuh version 3.10.2_7.3.2","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v3100_732","text":"","title":"Wazuh Docker v3.10.0_7.3.2"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_43","text":"Update to Wazuh version 3.10.0_7.3.2","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v395_721","text":"","title":"Wazuh Docker v3.9.5_7.2.1"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_44","text":"Update to Wazuh version 3.9.5_7.2.1","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v394_720","text":"","title":"Wazuh Docker v3.9.4_7.2.0"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_45","text":"Update to Wazuh version 3.9.4_7.2.0 Implemented Wazuh Filebeat Module ( jm404 ) #2a77c6a","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v393_720","text":"","title":"Wazuh Docker v3.9.3_7.2.0"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#fixed_5","text":"Wazuh-docker reinserts cluster settings after resuming containers ( @manuasir ) #213","title":"Fixed"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v392_711","text":"","title":"Wazuh Docker v3.9.2_7.1.1"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_46","text":"Update to Wazuh version 3.9.2_7.1.1","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v392_680","text":"","title":"Wazuh Docker v3.9.2_6.8.0"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_47","text":"Update to Wazuh version 3.9.2_6.8.0","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v391_710","text":"","title":"Wazuh Docker v3.9.1_7.1.0"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_48","text":"Support for Elastic v7.1.0 New environment variables for Kibana ( @manuasir ) #22ad43","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v391_680","text":"","title":"Wazuh Docker v3.9.1_6.8.0"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_49","text":"Update to Wazuh version 3.9.1_6.8.0 ( #181 )","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#fixed_6","text":"Fixed ELASTICSEARCH_KIBANA_IP environment variable ( @manuasir ) ( #181 )","title":"Fixed"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v390_672","text":"","title":"Wazuh Docker v3.9.0_6.7.2"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#changed_1","text":"Update Elastic Stack version to 6.7.2.","title":"Changed"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v390_671","text":"","title":"Wazuh Docker v3.9.0_6.7.1"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_50","text":"Support for xPACK authorized requests ( @manuasir ) ( #119 ) Add Elasticsearch cluster configuration ( @SitoRBJ ). ( #146 ) Add Elasticsearch cluster configuration ( @Phandora ) ( #140 ) Setting Nginx to support several user/passwords in Kibana ( @toniMR ) ( #136 )","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#changed_2","text":"Use LS_JAVA_OPTS instead of old LS_HEAP_SIZE ( @ruffy91 ) ( #139 ) Changing the original Wazuh docker image to allow adding code in the entrypoint ( @Phandora ) ( #151 )","title":"Changed"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#removed","text":"Removing files from Wazuh image ( @Phandora ) ( #153 )","title":"Removed"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v382_670","text":"","title":"Wazuh Docker v3.8.2_6.7.0"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#changed_3","text":"Update Elastic Stack version to 6.7.0. ( #144 )","title":"Changed"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v382_662","text":"","title":"Wazuh Docker v3.8.2_6.6.2"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#changed_4","text":"Update Elastic Stack version to 6.6.2. ( #130 )","title":"Changed"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v382_661","text":"","title":"Wazuh Docker v3.8.2_6.6.1"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#changed_5","text":"Update Elastic Stack version to 6.6.1. ( #129 )","title":"Changed"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v382_654","text":"","title":"Wazuh Docker v3.8.2_6.5.4"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_51","text":"Add Wazuh-Elasticsearch. ( #106 ) Store Filebeat /var/lib/filebeat/registry. ( #109 ) Adding the option to disable some xpack features. ( #111 ) Wazuh-Kibana customizable at plugin level. ( #117 ) Adding env variables for alerts data flow. ( #118 ) New Logstash entrypoint added. ( #135 ) Welcome screen management. ( #133 )","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#changed_6","text":"Update to Wazuh version 3.8.2. ( #105 )","title":"Changed"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#removed_1","text":"Remove alerts created in build time. ( #137 )","title":"Removed"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v381_654","text":"","title":"Wazuh Docker v3.8.1_6.5.4"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#changed_7","text":"Update to Wazuh version 3.8.1. ( #102 )","title":"Changed"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v380_654","text":"","title":"Wazuh Docker v3.8.0_6.5.4"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#changed_8","text":"Upgrade version 3.8.0_6.5.4. ( #97 )","title":"Changed"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#removed_2","text":"Remove cluster.py work around. ( #99 )","title":"Removed"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v372_654","text":"","title":"Wazuh Docker v3.7.2_6.5.4"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_52","text":"Improvements to Kibana settings added. ( #91 ) Add Kibana environmental variables for Wazuh APP config.yml. ( #89 )","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#changed_9","text":"Update Elastic Stack version to 6.5.4. ( #82 ) Add env credentials for nginx. ( #86 ) Improve filebeat configuration ( #88 )","title":"Changed"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#fixed_7","text":"Temporary fix for Wazuh cluster master node in Kubernetes. ( #84 )","title":"Fixed"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v372_653","text":"","title":"Wazuh Docker v3.7.2_6.5.3"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#changed_10","text":"Erasing temporary fix for AWS integration. ( #81 )","title":"Changed"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#fixed_8","text":"Upgrading errors due to wrong files. ( #80 )","title":"Fixed"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v370_650","text":"","title":"Wazuh Docker v3.7.0_6.5.0"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#changed_11","text":"Adapt to Elastic stack 6.5.0.","title":"Changed"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v370_643","text":"","title":"Wazuh Docker v3.7.0_6.4.3"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#added_53","text":"Allow custom scripts or commands before service start ( #58 ) Added description for wazuh-nginx ( #59 ) Added license file to match https://github.com/wazuh/wazuh LICENSE ( #60 ) Added SMTP packages ( #67 )","title":"Added"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#changed_12","text":"Increased proxy buffer for NGINX Kibana ( #51 ) Updated logstash config to remove deprecation warnings ( #55 ) Set ossec user's home path ( #61 )","title":"Changed"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#fixed_9","text":"Fixed a bug that prevents the API from starting when the Wazuh manager was updated. Change in the files that are stored in the volume. ( #65 ) Fixed script reference ( #62 )","title":"Fixed"},{"location":"endpoint-lab/wazuh-docker/CHANGELOG/#wazuh-docker-v361_643","text":"Wazuh-Docker starting point.","title":"Wazuh Docker v3.6.1_6.4.3"},{"location":"endpoint-lab/wazuh-docker/build-docker-images/","text":"Wazuh Docker Image Builder The creation of the images for the Wazuh stack deployment in Docker is done with the build-images.yml script To execute the process, the following must be executed in the root of the wazuh-docker repository: $ build-docker-images/build-images.sh This script initializes the environment variables needed to build each of the images.","title":"Wazuh Docker Image Builder"},{"location":"endpoint-lab/wazuh-docker/build-docker-images/#wazuh-docker-image-builder","text":"The creation of the images for the Wazuh stack deployment in Docker is done with the build-images.yml script To execute the process, the following must be executed in the root of the wazuh-docker repository: $ build-docker-images/build-images.sh This script initializes the environment variables needed to build each of the images.","title":"Wazuh Docker Image Builder"},{"location":"endpoint-lab/wazuh-docker/indexer-certs-creator/","text":"Certificate creation image build The dockerfile hosted in this directory is used to build the image used to boot Wazuh's single node and multi node stacks. To create the image, the following command must be executed: $ docker build -t wazuh/wazuh-certs-generator:0.0.1 .","title":"Certificate creation image build"},{"location":"endpoint-lab/wazuh-docker/indexer-certs-creator/#certificate-creation-image-build","text":"The dockerfile hosted in this directory is used to build the image used to boot Wazuh's single node and multi node stacks. To create the image, the following command must be executed: $ docker build -t wazuh/wazuh-certs-generator:0.0.1 .","title":"Certificate creation image build"},{"location":"endpoint-lab/wazuh-docker/multi-node/","text":"Deploy Wazuh Docker in multi node configuration This deployment is defined in the docker-compose.yml file with two Wazuh manager containers, three Wazuh indexer containers, and one Wazuh dashboard container. It can be deployed by following these steps: 1) Increase max_map_count on your host (Linux). This command must be run with root permissions: $ sysctl -w vm.max_map_count=262144 2) Run the certificate creation script: $ docker-compose -f generate-indexer-certs.yml run --rm generator 3) Start the environment with docker-compose: In the foregroud: $ docker-compose up In the background: $ docker-compose up -d The environment takes about 1 minute to get up (depending on your Docker host) for the first time since Wazuh Indexer must be started for the first time and the indexes and index patterns must be generated.","title":"Deploy Wazuh Docker in multi node configuration"},{"location":"endpoint-lab/wazuh-docker/multi-node/#deploy-wazuh-docker-in-multi-node-configuration","text":"This deployment is defined in the docker-compose.yml file with two Wazuh manager containers, three Wazuh indexer containers, and one Wazuh dashboard container. It can be deployed by following these steps: 1) Increase max_map_count on your host (Linux). This command must be run with root permissions: $ sysctl -w vm.max_map_count=262144 2) Run the certificate creation script: $ docker-compose -f generate-indexer-certs.yml run --rm generator 3) Start the environment with docker-compose: In the foregroud: $ docker-compose up In the background: $ docker-compose up -d The environment takes about 1 minute to get up (depending on your Docker host) for the first time since Wazuh Indexer must be started for the first time and the indexes and index patterns must be generated.","title":"Deploy Wazuh Docker in multi node configuration"},{"location":"endpoint-lab/wazuh-docker/multi-node/Migration-to-Wazuh-4.3/","text":"Opendistro data migration to Wazuh indexer on docker. This procedure explains how to migrate Opendistro data from Opendistro to Wazuh indexer in docker production deployments. The example is migrating from v4.2 to v4.3. Procedure Assuming that you have a v4.2 production deployment, perform the following steps. 1. Stop 4.2 environment docker-compose -f production-cluster.yml stop 2. List elasticsearch volumes docker volume ls --filter name='wazuh-docker_elastic-data' 3. Inspect elasticsearch volume docker volume inspect wazuh-docker_elastic-data-1 4. Spin down the 4.2 environment. docker-compose -f production-cluster.yml down Steps 5 and 6 can be done with the volume-migrator.sh script, specifying Docker compose version and project name as parameters. Ex: $ multi-node/volume-migrator.sh 1.25.0 multi-node 5. Run the volume create command: create new indexer and Wazuh manager volumes using the com.docker.compose.version label value from the previous command. docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=wazuh-indexer-data-1 \\ multi-node_wazuh-indexer-data-1 docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=wazuh-indexer-data-2 \\ multi-node_wazuh-indexer-data-2 docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=wazuh-indexer-data-3 \\ multi-node_wazuh-indexer-data-3 docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=master_wazuh_api_configuration \\ multi-node_master_wazuh_api_configuration docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=master_wazuh_etc \\ multi-node_docker_wazuh_etc docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=master-wazuh-logs \\ multi-node_master-wazuh-logs docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=master-wazuh-queue \\ multi-node_master-wazuh-queue docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=master-wazuh-var-multigroups \\ multi-node_master-wazuh-var-multigroups docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=master-wazuh-integrations \\ multi-node_master-wazuh-integrations docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=master-wazuh-active-response \\ multi-node_master-wazuh-active-response docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=master-wazuh-agentless \\ multi-node_master-wazuh-agentless docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=master-wazuh-wodles \\ multi-node_master-wazuh-wodles docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=master-filebeat-etc \\ multi-node_master-filebeat-etc docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=master-filebeat-var \\ multi-node_master-filebeat-var docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=worker_wazuh_api_configuration \\ multi-node_worker_wazuh_api_configuration docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=worker_wazuh_etc \\ multi-node_worker-wazuh-etc docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=worker-wazuh-logs \\ multi-node_worker-wazuh-logs docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=worker-wazuh-queue \\ multi-node_worker-wazuh-queue docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=worker-wazuh-var-multigroups \\ multi-node_worker-wazuh-var-multigroups docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=worker-wazuh-integrations \\ multi-node_worker-wazuh-integrations docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=worker-wazuh-active-response \\ multi-node_worker-wazuh-active-response docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=worker-wazuh-agentless \\ multi-node_worker-wazuh-agentless docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=worker-wazuh-wodles \\ multi-node_worker-wazuh-wodles docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=worker-filebeat-etc \\ multi-node_worker-filebeat-etc docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=worker-filebeat-var \\ multi-node_worker-filebeat-var 6. Copy the volume content from elasticsearch to Wazuh indexer volumes and old Wazuh manager content to new volumes. docker container run --rm -it \\ -v wazuh-docker_elastic-data-1:/from \\ -v multi-node_wazuh-indexer-data-1:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_elastic-data-2:/from \\ -v multi-node_wazuh-indexer-data-2:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_elastic-data-3:/from \\ -v multi-node_wazuh-indexer-data-3:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_ossec-api-configuration:/from \\ -v multi-node_master-wazuh-api-configuration:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_ossec-etc:/from \\ -v multi-node_master-wazuh-etc:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_ossec-logs:/from \\ -v multi-node_master-wazuh-logs:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_ossec-queue:/from \\ -v multi-node_master-wazuh-queue:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_ossec-var-multigroups:/from \\ -v multi-node_master-wazuh-var-multigroups:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_ossec-integrations:/from \\ -v multi-node_master-wazuh-integrations:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_ossec-active-response:/from \\ -v multi-node_master-wazuh-active-response:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_ossec-agentless:/from \\ -v multi-node_master-wazuh-agentless:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_ossec-wodles:/from \\ -v multi-node_master-wazuh-wodles:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_filebeat-etc:/from \\ -v multi-node_master-filebeat-etc:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_filebeat-var:/from \\ -v multi-node_master-filebeat-var:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_worker-ossec-api-configuration:/from \\ -v multi-node_worker-wazuh-api-configuration:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_worker-ossec-etc:/from \\ -v multi-node_worker-wazuh-etc:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_worker-ossec-logs:/from \\ -v multi-node_worker-wazuh-logs:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_worker-ossec-queue:/from \\ -v multi-node_worker-wazuh-queue:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_worker-ossec-var-multigroups:/from \\ -v multi-node_worker-wazuh-var-multigroups:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_worker-ossec-integrations:/from \\ -v multi-node_worker-wazuh-integrations:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_worker-ossec-active-response:/from \\ -v multi-node_worker-wazuh-active-response:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_worker-ossec-agentless:/from \\ -v multi-node_worker-wazuh-agentless:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_worker-ossec-wodles:/from \\ -v multi-node_worker-wazuh-wodles:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_worker-filebeat-etc:/from \\ -v multi-node_worker-filebeat-etc:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_worker-filebeat-var:/from \\ -v multi-node_worker-filebeat-var:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" 7. Start the 4.3 environment. git checkout 4.3 cd multi-node docker-compose -f generate-indexer-certs.yml run --rm generator docker-compose up -d 8. Check the access to Wazuh dashboard : go to the Wazuh dashboard using the web browser and check the data.","title":"Opendistro data migration to Wazuh indexer on docker."},{"location":"endpoint-lab/wazuh-docker/multi-node/Migration-to-Wazuh-4.3/#opendistro-data-migration-to-wazuh-indexer-on-docker","text":"This procedure explains how to migrate Opendistro data from Opendistro to Wazuh indexer in docker production deployments. The example is migrating from v4.2 to v4.3.","title":"Opendistro data migration to Wazuh indexer on docker."},{"location":"endpoint-lab/wazuh-docker/multi-node/Migration-to-Wazuh-4.3/#procedure","text":"Assuming that you have a v4.2 production deployment, perform the following steps. 1. Stop 4.2 environment docker-compose -f production-cluster.yml stop 2. List elasticsearch volumes docker volume ls --filter name='wazuh-docker_elastic-data' 3. Inspect elasticsearch volume docker volume inspect wazuh-docker_elastic-data-1 4. Spin down the 4.2 environment. docker-compose -f production-cluster.yml down Steps 5 and 6 can be done with the volume-migrator.sh script, specifying Docker compose version and project name as parameters. Ex: $ multi-node/volume-migrator.sh 1.25.0 multi-node 5. Run the volume create command: create new indexer and Wazuh manager volumes using the com.docker.compose.version label value from the previous command. docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=wazuh-indexer-data-1 \\ multi-node_wazuh-indexer-data-1 docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=wazuh-indexer-data-2 \\ multi-node_wazuh-indexer-data-2 docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=wazuh-indexer-data-3 \\ multi-node_wazuh-indexer-data-3 docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=master_wazuh_api_configuration \\ multi-node_master_wazuh_api_configuration docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=master_wazuh_etc \\ multi-node_docker_wazuh_etc docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=master-wazuh-logs \\ multi-node_master-wazuh-logs docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=master-wazuh-queue \\ multi-node_master-wazuh-queue docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=master-wazuh-var-multigroups \\ multi-node_master-wazuh-var-multigroups docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=master-wazuh-integrations \\ multi-node_master-wazuh-integrations docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=master-wazuh-active-response \\ multi-node_master-wazuh-active-response docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=master-wazuh-agentless \\ multi-node_master-wazuh-agentless docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=master-wazuh-wodles \\ multi-node_master-wazuh-wodles docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=master-filebeat-etc \\ multi-node_master-filebeat-etc docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=master-filebeat-var \\ multi-node_master-filebeat-var docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=worker_wazuh_api_configuration \\ multi-node_worker_wazuh_api_configuration docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=worker_wazuh_etc \\ multi-node_worker-wazuh-etc docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=worker-wazuh-logs \\ multi-node_worker-wazuh-logs docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=worker-wazuh-queue \\ multi-node_worker-wazuh-queue docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=worker-wazuh-var-multigroups \\ multi-node_worker-wazuh-var-multigroups docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=worker-wazuh-integrations \\ multi-node_worker-wazuh-integrations docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=worker-wazuh-active-response \\ multi-node_worker-wazuh-active-response docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=worker-wazuh-agentless \\ multi-node_worker-wazuh-agentless docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=worker-wazuh-wodles \\ multi-node_worker-wazuh-wodles docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=worker-filebeat-etc \\ multi-node_worker-filebeat-etc docker volume create \\ --label com.docker.compose.project=multi-node \\ --label com.docker.compose.version=1.25.0 \\ --label com.docker.compose.volume=worker-filebeat-var \\ multi-node_worker-filebeat-var 6. Copy the volume content from elasticsearch to Wazuh indexer volumes and old Wazuh manager content to new volumes. docker container run --rm -it \\ -v wazuh-docker_elastic-data-1:/from \\ -v multi-node_wazuh-indexer-data-1:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_elastic-data-2:/from \\ -v multi-node_wazuh-indexer-data-2:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_elastic-data-3:/from \\ -v multi-node_wazuh-indexer-data-3:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_ossec-api-configuration:/from \\ -v multi-node_master-wazuh-api-configuration:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_ossec-etc:/from \\ -v multi-node_master-wazuh-etc:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_ossec-logs:/from \\ -v multi-node_master-wazuh-logs:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_ossec-queue:/from \\ -v multi-node_master-wazuh-queue:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_ossec-var-multigroups:/from \\ -v multi-node_master-wazuh-var-multigroups:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_ossec-integrations:/from \\ -v multi-node_master-wazuh-integrations:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_ossec-active-response:/from \\ -v multi-node_master-wazuh-active-response:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_ossec-agentless:/from \\ -v multi-node_master-wazuh-agentless:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_ossec-wodles:/from \\ -v multi-node_master-wazuh-wodles:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_filebeat-etc:/from \\ -v multi-node_master-filebeat-etc:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_filebeat-var:/from \\ -v multi-node_master-filebeat-var:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_worker-ossec-api-configuration:/from \\ -v multi-node_worker-wazuh-api-configuration:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_worker-ossec-etc:/from \\ -v multi-node_worker-wazuh-etc:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_worker-ossec-logs:/from \\ -v multi-node_worker-wazuh-logs:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_worker-ossec-queue:/from \\ -v multi-node_worker-wazuh-queue:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_worker-ossec-var-multigroups:/from \\ -v multi-node_worker-wazuh-var-multigroups:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_worker-ossec-integrations:/from \\ -v multi-node_worker-wazuh-integrations:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_worker-ossec-active-response:/from \\ -v multi-node_worker-wazuh-active-response:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_worker-ossec-agentless:/from \\ -v multi-node_worker-wazuh-agentless:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_worker-ossec-wodles:/from \\ -v multi-node_worker-wazuh-wodles:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_worker-filebeat-etc:/from \\ -v multi-node_worker-filebeat-etc:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" docker container run --rm -it \\ -v wazuh-docker_worker-filebeat-var:/from \\ -v multi-node_worker-filebeat-var:/to \\ alpine ash -c \"cd /from ; cp -avp . /to\" 7. Start the 4.3 environment. git checkout 4.3 cd multi-node docker-compose -f generate-indexer-certs.yml run --rm generator docker-compose up -d 8. Check the access to Wazuh dashboard : go to the Wazuh dashboard using the web browser and check the data.","title":"Procedure"},{"location":"endpoint-lab/wazuh-docker/single-node/","text":"Deploy Wazuh Docker in single node configuration This deployment is defined in the docker-compose.yml file with one Wazuh manager containers, one Wazuh indexer containers, and one Wazuh dashboard container. It can be deployed by following these steps: 1) Increase max_map_count on your host (Linux). This command must be run with root permissions: $ sysctl -w vm.max_map_count=262144 2) Run the certificate creation script: $ docker-compose -f generate-indexer-certs.yml run --rm generator 3) Start the environment with docker-compose: In the foregroud: $ docker-compose up In the background: $ docker-compose up -d The environment takes about 1 minute to get up (depending on your Docker host) for the first time since Wazuh Indexer must be started for the first time and the indexes and index patterns must be generated.","title":"Deploy Wazuh Docker in single node configuration"},{"location":"endpoint-lab/wazuh-docker/single-node/#deploy-wazuh-docker-in-single-node-configuration","text":"This deployment is defined in the docker-compose.yml file with one Wazuh manager containers, one Wazuh indexer containers, and one Wazuh dashboard container. It can be deployed by following these steps: 1) Increase max_map_count on your host (Linux). This command must be run with root permissions: $ sysctl -w vm.max_map_count=262144 2) Run the certificate creation script: $ docker-compose -f generate-indexer-certs.yml run --rm generator 3) Start the environment with docker-compose: In the foregroud: $ docker-compose up In the background: $ docker-compose up -d The environment takes about 1 minute to get up (depending on your Docker host) for the first time since Wazuh Indexer must be started for the first time and the indexes and index patterns must be generated.","title":"Deploy Wazuh Docker in single node configuration"},{"location":"network-lab/01_install-suricata/","text":"","title":"01 install suricata"}]}